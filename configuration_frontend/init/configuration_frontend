#! /bin/sh

### BEGIN INIT INFO
# Provides:          configuration_frontend
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Configuration Frontend
# Description:       This script starts or stops Configuration Frontend
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Configuration Frontend"
NAME=configuration_frontend
SCRIPTNAME=/etc/init.d/$NAME
PIDFILE=/var/run/$NAME.pid

. /lib/init/vars.sh

. /lib/lsb/init-functions

if [ -f /etc/default/$NAME ]; then
    . /etc/default/$NAME
fi

if [ -n "$CONFIGURATION_FRONTEND_DIR" ]; then
    DAEMON=$CONFIGURATION_FRONTEND_DIR/$NAME
else
    DAEMON=/usr/sbin/$NAME
fi

[ -x "$DAEMON" ] || exit 0

do_start()
{
    # Quick hack to start MySQL (which starts with Upstart) before starting
    # Virtual Network Manager
    start mysql 1>/dev/null 2>&1
    sleep 1

    TREMA_HOME=$TREMA_HOME start-stop-daemon --start --quiet --pidfile $PIDFILE \
        --exec $DAEMON --test > /dev/null || return 1
    TREMA_HOME=$TREMA_HOME start-stop-daemon --start --quiet --pidfile $PIDFILE \
        --exec $DAEMON -- $DAEMON_ARGS || return 2
}

do_stop()
{
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
    RETVAL="$?"
    return "$RETVAL"
}

case "$1" in
    start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
    stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
    status)
        status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
    restart|force-reload)
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        case "$?" in
            0|1)
                do_start
                case "$?" in
                    0) log_end_msg 0 ;;
                    1) log_end_msg 1 ;;
                    *) log_end_msg 1 ;;
                esac
                ;;
            *)
                log_end_msg 1
                ;;
        esac
        ;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac

:
