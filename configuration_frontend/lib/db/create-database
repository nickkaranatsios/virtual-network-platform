#!/usr/bin/env ruby
#
# Copyright (C) 2013 NEC Corporation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

required_path = File.dirname( __FILE__ ) + '/..'
$LOAD_PATH.unshift required_path unless $LOAD_PATH.include? required_path

require 'logger'
require 'rubygems'
require 'active_record'
require 'config'


logger = ::Logger.new( STDOUT )
logger.level = ::Logger::INFO
ActiveRecord::Base.logger = logger

# Create database

ActiveRecord::Base.establish_connection( DB::Configure.instance.to_hash )
ActiveRecord::Base.connection.select_values( "show databases" ).each do | each |
  if each == config[ 'database' ]
    print "Drop database? (yes/no): "
    if STDIN.gets.strip != "yes"
      exit 1
    end
    break
  end
end
ActiveRecord::Base.connection.drop_database config[ 'database' ]
ActiveRecord::Base.connection.create_database config[ 'database' ]

# re-connect
ActiveRecord::Base.establish_connection( config )

# Create tables
DATA.read.split( ';' ).each do | each |
  each.sub!( /^\s+/, '' )
  next if each.empty?
  ActiveRecord::Base.connection.execute each
end

__END__
create table slices (
       id              int unsigned not null,
       description     text,
       state           tinyint unsigned not null,
       updated_at      timestamp,
       primary key (id),
       index state_index (state)
) engine = innodb;

create table ports (
       id              int unsigned not null auto_increment,
       slice_id        int unsigned not null,
       datapath_id     bigint unsigned not null,
       port_no         smallint unsigned not null,
       port_name       varchar(255),
       vid             smallint unsigned not null,
       type            tinyint unsigned not null,
       description     text,
       state           tinyint unsigned not null,
       updated_at      timestamp,
       primary key (id,slice_id),
       constraint port_unique unique (datapath_id,port_no,port_name,vid),
       index id_index (id),
       index slice_id_index (slice_id),
       index datapath_id_index (datapath_id),
       index type_index (type),
       index state_index (state)
) engine = innodb;

create table mac_addresses (
       slice_id        int unsigned not null,
       port_id         int unsigned not null,
       mac             bigint unsigned not null,
       type            tinyint unsigned not null,
       state           tinyint unsigned not null,
       updated_at      timestamp,
       primary key (slice_id,port_id,mac),
       index slice_id_index (slice_id),
       index port_id_index (port_id),
       index type_index (type),
       index state_index (state)
) engine = innodb;

create table switches (
       datapath_id      bigint unsigned not null,
       controller_host  varchar(255) not null,
       controller_pid   smallint unsigned not null,
       registered_at	timestamp,
       primary key (datapath_id),
       constraint controller_unique unique (datapath_id,controller_host,controller_pid),
       index host_pid_index (controller_host,controller_pid)
) engine = innodb;

create table switch_ports (
       datapath_id      bigint unsigned not null,
       port_no          smallint unsigned not null,
       name             varchar(255) not null,
       registered_at    timestamp,
       primary key (datapath_id,port_no),
       constraint name_unique unique (datapath_id,name),
       index name_index (name)
) engine = innodb;

create table agents (
       datapath_id      bigint unsigned not null,
       uri		text not null,
       primary key (datapath_id)
) engine = innodb;

create table overlay_networks (
       slice_id               int unsigned not null,
       reflector_group_id     smallint unsigned not null,
       primary key (slice_id)
) engine = innodb;

create table reflectors (
       id                     smallint unsigned not null,
       group_id		      smallint unsigned not null,
       broadcast_address      varchar(128) not null,
       broadcast_port         smallint unsigned not null,
       uri		      text not null,
       primary key (id)
) engine = innodb;

create table tunnel_endpoints (
       datapath_id	      bigint unsigned not null,
       local_address          varchar(128) not null,
       local_port             smallint unsigned not null,
       primary key (datapath_id)
) engine = innodb;

insert into reflectors (id,group_id,broadcast_address,broadcast_port,uri) values (1,1,'239.0.0.1',60000,'');

create table status (
       hostname        varchar(255),
       primary key (hostname)
) engine = innodb;
